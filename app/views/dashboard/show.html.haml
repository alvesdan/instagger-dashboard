.photo-set
  - user_media.first(5).each do |media|
    .photo{ style: "background-image:url(#{media.images.fetch('standard_resolution').fetch('url')})" }

.container
  .row
    .col-sm-12
      %header
        .profile-picture{ style: "background-image:url(#{current_user.profile_picture})" }

        %h1= current_user.username
        %p= current_user.bio

      .report.clearfix
        %header.clearfix
          .pull-left
            %strong
              %small Week
              = user_report_service_decorator.week_title(:one)
          .pull-right
            %strong
              %small Week
              = user_report_service_decorator.week_title(:two)
        .table-wrapper
          = render 'data_table', user_report_service_decorator: user_report_service_decorator

      .graphics
        .wrapper.clearfix
          = render 'dashboard/graphic', type: :posts, icon: 'camera'
          = render 'dashboard/graphic', type: :comments, icon: 'comment'
          = render 'dashboard/graphic', type: :likes, icon: 'heart'

      .chart-wrapper.clearfix
        .chart

      .footer.text-center
        %p
          Design by
          = link_to 'Bruno Marinho', 'http://www.brunomarinho.com/'
          and code Daniel Alves.
        :plain
          <p>This application is
            <a href="https://github.com/alvesdan/instagger-dashboard">open source</a>.</p>
        = link_to 'Log Out', '/sign-out', class: 'text-danger btn btn-xs btn-default'

- content_for :after_javascript do
  :javascript
    $(function () {
      $('[data-toggle="popover"]').popover();

      var chartData = JSON.parse("#{j user_report_service_decorator.chart_data.last(7).to_json}");
      var formatDate = function(date) { return date.split('-').reverse().join('/'); };
      CanvasJS.addColorSet('customBlue', ['#0C3879', '#375A8C', '#557EBC']);
      $('.chart-wrapper .chart').CanvasJSChart({
        colorSet: 'customBlue',
        height: 200,

        axisY: {
          labelFontFamily: 'Helvetica Neue, Helvetica',
          interlacedColor: '#FFFFFF',
          lineThickness: 0,
          lineColor: '#FFFFFF',
          gridColor: '#F4F4F4',
          tickColor: '#FFFFFF',
          includeZero: false
        },

        axisX: {
          labelFontFamily: 'Helvetica Neue, Helvetica',
          lineColor: '#FFFFFF',
          tickColor: '#FFFFFF'
        },

        toolTip: {
          borderColor: 'transparent'
        },

        data: [
          {
            type: "line",
            toolTipContent: "<span class=\"chart-tooltip\">{y} posts on {label}</span>",
            dataPoints: _.map(chartData, function(date){
              return {
                label: formatDate(date.date),
                y: date.total_posts
              }
            })
          },

          {
            type: "line",
            toolTipContent: "<span class=\"chart-tooltip\">{y} likes on {label}</span>",
            dataPoints: _.map(chartData, function(date){
              return {
                label: formatDate(date.date),
                y: date.total_likes
              }
            })
          },

          {
            type: "line",
            toolTipContent: "<span class=\"chart-tooltip\">{y} comments on {label}</span>",
            dataPoints: _.map(chartData, function(date){
              return {
                label: formatDate(date.date),
                y: date.total_comments
              }
            })
          }
        ]
      });
    })
